<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--扫描组件-->
    <context:component-scan base-package="zzydx">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--数据源-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--SqlSessionFactoryBean,在springioc中获取SqlSessionFactoryBean对象-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--mybatis的核心配置文件路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--设置数据源-->
        <!--<property name="dataSource" ref="dataSource"></property>-->
        <!--类型别名-->
        <!--<property name="typeAliasesPackage" value="zzydx.pojo"></property>-->
        <!--映射文件路径,接口包路径和映射文件包路径不一致时,用mapperLocations指定xml文件所在的路径-->
        <!-- <property name="mapperLocations" value="classpath:mapper/*.xml"></property>-->
        <!--分页插件-->
        <!--<property name="plugins">-->
        <!--<array>-->
        <!--<bean class="com.github.pagehelper.PageInterceptor"></bean>-->
        <!--</array>-->
        <!--</property>-->
    </bean>
    <!--mapper扫描,通过sqlsession创建mapper接口的代理实现类对象,交给ioc来管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="zzydx.mapper"></property>
    </bean>
    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--事务管理的注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
